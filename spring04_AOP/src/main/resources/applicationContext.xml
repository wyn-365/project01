<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">


    <!--配置spring的IOC，吧service对象配置进来-->
    <bean id="accountService" class="com.wang.service.impl.AccountServiceImpl"></bean>

    <!--spring中的基于XML的AOP配置
        1、把通知的bean也交给spring来管理
        2、使用aop-config标签开始配置
        3、使用aop:aspect标签配置切面
        ref：通知类bean的ID
        4、asp：aspect使用对应的标签来配置通知的类型
            示例：让printLog方法在切入点方法执行之前执行，
            可以使前置通知aop:before
        5、pointcut指定切点表达式，表名对业务层增强的的方法
            切入点execution(表达式)
              访问修饰符  返回值  报名.报名..类名.方法名（参数列表）
              public void com.wang.service.impl.AccountServiceImpl.saveAccount()
              【1】全通配写法： * *.*.*.*(..) 包名  类名  和方法名 的偶可以用*  参数列表可以写基本类型参数名称，引用类型需要加上包名
                实际开发中常用的切入点表达式
                * com.wang.service.impl.*.*(..)
    -->
    <!--配置LOgger类-->
    <bean id="logger" class="com.wang.utils.Logger"></bean>

    <!--配置AOP-->
    <aop:config>
        <!--配置切面-->
        <aop:aspect id="logAdvice" ref="logger">
            <!--前置通知：service方法执行之前执行 建立通知的方法 和切入点方法的关联-->
            <aop:before method="printLog" pointcut-ref="pt1" ></aop:before>
        </aop:aspect>

        <!--配置切入点表达式
                id 唯一标志表达式唯一标识
                expression：表达式内容

        -->
        <aop:pointcut id="pt1" expression="execution(* com.wang.service.impl.*.*(..))">

        </aop:pointcut>

    </aop:config>
</beans>
